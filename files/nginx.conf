server {
    listen      9100;
    server_name {{repl ConfigOption "hostname" }};

    {{repl if ConfigOptionNotEquals "authentication_type" "authentication_type_anonymous" }}
    error_page 401 = @error401;
    location @error401 {
      {{repl if ConfigOptionEquals "https_enabled" "1" }}
        return 302 https://$server_name/replicated-auth/sign-in;
      {{repl else }}
        return 302 http://$server_name/replicated-auth/sign-in;
      {{repl end }}
    }

    location = /replicated-auth/authcheck {
        internal;

        rewrite           .* / break;
        proxy_pass        http://{{repl HostPrivateIpAddress "SSL/Authentication" "getelk/auth" }}:{{repl ContainerExposedPort "SSL/Authentication" "getelk/auth" "8080" }};
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  Host $host;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    {{repl end }}

    location / {
        {{repl if ConfigOptionEquals "authentication_type" "authentication_type_password" }}
        auth_request /replicated-auth/authcheck;
        {{repl end }}
        proxy_pass       http://{{repl HostPrivateIpAddress "Elasticsearch" "getelk/elasticsearch-head" }}:{{repl ContainerExposedPort "Elasticsearch" "getelk/elasticsearch-head" "80" }};
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}